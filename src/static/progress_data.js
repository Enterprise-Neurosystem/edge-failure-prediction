
let startBtnObj = document.getElementById("startBtn");
let stopBtnObj = document.getElementById("stopBtn");
startBtnObj.addEventListener("click", startProcess);
stopBtnObj.addEventListener('click', stopProcess);

let eventSource;
let progressBarObj = document.getElementById("progressBar");
let progressTextObj = document.getElementById("progressText");
let jobSize;
function startProcess(){
    console.log("startProcess()");
    // Create a JS EventSource object and give it the URL of a long running task.  The EventSource object
    // keeps the connection open to the given URL so that the process at the end point can send messages
    // back to the EventSource object.
    eventSource = new EventSource("/progress-shape-data");

    // There are 3 Events to listen to:  "initialize", "inprogress", and "jobfinished".
    // "initialize" Event gets the size of the job in iterations needed.
    eventSource.addEventListener("initialize", function(event){
        jobSize = event.data;
        progressBarObj.max = jobSize;
        console.log("Initializing progress max to " + jobSize);
    }, false);

    // "inprogress" Event gets current job progress (how many iterations have been completed")
    eventSource.addEventListener("inprogress", function(event){
        jobSize = progressBarObj.max;
        progressBarObj.value = event.data;
        //progressBarObj.max = jobSize;
        //console.log("progressBar value: "+ progressBarObj.value);
        let percent = (progressBarObj.value * 100)/ jobSize;
        progressTextObj.innerHTML = (Math.round(percent) ).toString() + "%";
        //console.log("data: " + event.data + "  jobSize: " +  jobSize + "    percent: " + Math.round(percent));
        //if (event.data == 100) {
        //    eventSource.close();
        //}

    }, false);

    // "jobfinished" Event gets back finished message generated by the server when job finishes normally
    eventSource.addEventListener("jobfinished", function(event){
        jobSize = progressBarObj.max
        let percent = (progressBarObj.value * 100)/ jobSize;
        progressTextObj.innerHTML = (Math.round(percent) ).toString() + "%";
        console.log("data: " + event.data);
        console.log("Job finished, closing EventSource")
        eventSource.close();
        startBtnObj.disabled = false;
        trainTabBtn.disabled = false;
        progressTextObj.innerHTML = "Data is prepared.  Ready to train"
    }, false);


    startBtnObj.disabled = true;
}
// Closes the EventSource object which closes the connection between browser and servlet.  This
// puts the PrintWriter in the servelt to be in an error state.  On the server the error state is checked,
// and if true, closes the PrintWriter safely.
function stopProcess(){
    console.log("Stopping process");
    eventSource.close();
    startBtnObj.disabled = false;
    progressTextObj.innerHTML = "User Terminated Process";
}

