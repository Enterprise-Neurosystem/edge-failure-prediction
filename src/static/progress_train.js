console.log("in progress_train.js");
let trainBtnObj = document.getElementById("trainingBtn");
//let stopBtnObj = document.getElementById("stopBtn");
trainBtnObj.addEventListener("click", startTrain);
//stopBtnObj.addEventListener('click', stopProcess);

let trainEventSource = null;
let trainProgressBarObj = document.getElementById("trainProgress");
let trainProgressTextObj = document.getElementById("trainProgressText");
let trainJobSize = 0;
function startTrain(){
    console.log("startTrain()");
    // Create a JS EventSource object and give it the URL of a long running task.  The EventSource object
    // keeps the connection open to the given URL so that the process at the end point can send messages
    // back to the EventSource object.
    trainEventSource = new EventSource("/train-model");

    // There are 3 Events to listen to:  "initialize", "inprogress", and "jobfinished".
    // "initialize" Event gets the size of the job in iterations needed.
    trainEventSource.addEventListener("initialize", function(event){
        jobSize = event.data;
        trainProgressBarObj.max = trainJobSize;
        console.log("Initializing progress max to " + trainJobSize);
    }, false);

    // "inprogress" Event gets current job progress (how many iterations have been completed")
    trainEventSource.addEventListener("inprogress", function(event){
        let jobSize = trainProgressBarObj.max;
        trainProgressBarObj.value = event.data;
        //progressBarObj.max = jobSize;
        console.log("progressBar value: "+ trainProgressBarObj.value);
        let percent = (trainProgressBarObj.value * 100)/ jobSize;
        trainProgressTextObj.innerHTML = (Math.round(percent) ).toString() + "%";
        console.log("data: " + event.data + "  jobSize: " +  jobSize + "    percent: " + Math.round(percent));
        //if (event.data == 100) {
        //    eventSource.close();
        //}

    }, false);

    // "jobfinished" Event gets back finished message generated by the server when job finishes normally
    trainEventSource.addEventListener("jobfinished", function(event){
        let jobSize = trainProgressBarObj.max
        let percent = (trainProgressBarObj.value * 100)/ jobSize;
        trainProgressTextObj.innerHTML = (Math.round(percent) ).toString() + "%";
        console.log("data: " + event.data);
        console.log("Job finished, closing EventSource")
        trainEventSource.close();
        startBtnObj.disabled = false;
    }, false);


    trainBtnObj.disabled = true;
}
// Closes the EventSource object which closes the connection between browser and servlet.  This
// puts the PrintWriter in the servelt to be in an error state.  On the server the error state is checked,
// and if true, closes the PrintWriter safely.
function stopTrain(){
    console.log("Stopping process");
    trainEventSource.close();
    trainBtnObj.disabled = false;
    trainProgressTextObj.innerHTML = "User Terminated Process";
}
